import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
// import "./app/globals.css";
import { connectToDatabse } from "../dbConfig/dbconfig";
// import Navbar from "../user/components/Navbar";
// import Footer from "../user/components/Footer";
// import { usePathname } from 'next/navigation';

connectToDatabse();
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Portifilio Showcase",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  //  const pathname = usePathname();
  // const isAdminRoute = pathname.startsWith('/admin');
  // const pathName = typeof window !== 'undefined' ? window.location.pathname : '';
  // const isAdminRoute = pathName.startsWith('/admin');

  // // If it's an admin route, only render children without root layout styles
  // if (isAdminRoute) {
  //   return children;
  // }
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        
    {      /* Render Navbar and Footer only for non-admin routes */
        /* If you want to conditionally render Navbar and Footer based on the route, you can use a similar approach as above */
        /* For example, you can check if the current route is an admin route and conditionally render Navbar and Footer */
        /* For now, we will render them for all routes */}
       
         {/* {!isAdminRoute && <Navbar />} */}
         {/* <Navbar/> */}
      {children}
      {/* <Footer/> */}
      {/* {!isAdminRoute && <Footer />} */}
      </body>
    </html>
  );
}
